version: "2"
services:
  pg-master:
    image: 'danieldent/postgres-replication'
    restart: 'always'
    environment:
      POSTGRES_DB: wdm
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      PGDATA: '/var/lib/postgresql/data'
      PG_WALL_KEEP_SEGMENTS: 32
    volumes:
      - ./data/pgm:/var/lib/postgresql/data
      - ./pgsql_backup:/opt/pgsql_backup
    ports:
      - "22241:5432"
    networks:
      - 'postgres'
  pg-slave1:
   image: 'danieldent/postgres-replication'
   restart: 'always'
   environment:
     POSTGRES_USER: 'postgres'
     POSTGRES_PASSWORD: 'postgres'
     PGDATA: '/var/lib/postgresql/data'
     PG_WALL_KEEP_SEGMENTS: 32
     REPLICATE_FROM: 'pg-master'
   volumes:
     - ./data/pgs1:/var/lib/postgresql/data
   networks:
     - 'postgres'
   ports:
     - "22242:5432"
  pg-slave2:
   image: 'danieldent/postgres-replication'
   restart: 'always'
   environment:
     POSTGRES_USER: 'postgres'
     POSTGRES_PASSWORD: 'postgres'
     PGDATA: '/var/lib/postgresql/data'
     PG_WALL_KEEP_SEGMENTS: 32
     REPLICATE_FROM: 'pg-master'
   volumes:
     - ./data/pgs2:/var/lib/postgresql/data
   ports:
     - "22243:5432"
   networks:
     - 'postgres'
  server:
    build:
      context: .
    command: "npm run start"
    restart: 'always'
    ports:
      - "2222:3000"
    volumes:
      - .:/var/www
    networks:
      - "mongo"
      - "postgres"
      - "neo4j"
  mongo1:
    image: mongo:3
    volumes:
      - ./data/mongo1:/data/db
    ports:
      - "22231:27017"
    networks:
      - "mongo"
    command: "mongod --replSet mongo-replication --smallfiles"
  mongo2:
    image: mongo:3
    volumes:
      - ./data/mongo2:/data/db
    ports:
      - "22232:27017"
    networks:
      - "mongo"
    command: "mongod --replSet mongo-replication --smallfiles"
  mongo3:
    image: mongo:3
    volumes:
      - ./data/mongo3:/data/db
    ports:
      - "22233:27017"
    networks:
      - "mongo"
    command: "mongod --replSet mongo-replication --smallfiles"
  neo4j:
    image: neo4j:3.2
    volumes:
      - ./data/neo4j:/data
    ports:
      - "2225:7687"
      - "2226:7474"
    environment:
      NEO4J_AUTH: none
    networks:
      - "neo4j"
networks:
  mongo:
    driver: bridge
  postgres:
    driver: bridge
  neo4j:
    driver: bridge
